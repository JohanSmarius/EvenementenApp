@page "/shiftlist/{eventId:guid}"

@using global::Shared
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Shift List</PageTitle>

<h3>Shift List</h3>

@if (eventDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>@eventDetails.Name</h4>
    <QuickGrid Items="eventDetails.Shifts.AsQueryable()" TGridItem="Shift" Class="grid">
        <PropertyColumn Property="@(s => s.Name)" Title="Shift Name" Sortable="true" />
        <PropertyColumn Property="@(s => s.BeginTime)" Title="Begin Time" Sortable="true" />
        <PropertyColumn Property="@(s => s.EndTime)" Title="End Time" Sortable="true" />
        <PropertyColumn Property="@(s => s.NumberOfVolunteersNeeded)" Title="Volunteers Needed" Sortable="true" />
        <TemplateColumn Title="Actions">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="() => NavigateToEditShift(context.Id)">Edit</button>
            </div>
        </TemplateColumn>
    </QuickGrid>
    <button class="btn btn-primary" @onclick="NavigateToAddShift">Add Shift</button>
}

@code {
    [Parameter] public Guid eventId { get; set; }
    private Happening? eventDetails;

    protected override async Task OnInitializedAsync()
    {
        eventDetails = await Http.GetFromJsonAsync<Happening>($"api/events/{eventId}");
    }

    private void NavigateToAddShift()
    {
        Navigation.NavigateTo($"/addshift/{eventId}");
    }

    private void NavigateToEditShift(Guid shiftId)
    {
        Navigation.NavigateTo($"/editshift/{eventId}/{shiftId}");
    }
}
