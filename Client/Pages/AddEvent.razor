@page "/addevent"

@using global::Shared
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Toevoegen evenement</PageTitle>

<h3>Toevoegen evenement</h3>

<EditForm Model="@newEvent" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Naam evenement</label>
        <InputText id="name" class="form-control" @bind-Value="newEvent.Name" />
    </div>
    <div class="form-group">
        <label for="customerName">Naam klant</label>
        <InputText id="customerName" class="form-control" @bind-Value="newEvent.CustomerName" />
    </div>
    <div class="form-group">
        <label for="address">Adres</label>
        <InputText id="address" class="form-control" @bind-Value="newEvent.Address" />
    </div>
    <div class="form-group">
        <label for="beginDate">Begin datum</label>
        <InputDate id="beginDate" class="form-control" @bind-Value="newEvent.BeginDate" Type="InputDateType.DateTimeLocal" />
    </div>
    <div class="form-group">
        <label for="endDate">Einddatum</label>
        <InputDate id="endDate" class="form-control" @bind-Value="newEvent.EndDate" Type="InputDateType.DateTimeLocal" />
    </div>
    <div class="form-group">
        <label for="numberOfVolunteersNeededPerShift">Number of Volunteers Needed Per Shift</label>
        <InputNumber id="numberOfVolunteersNeededPerShift" class="form-control" @bind-Value="newEvent.NumberOfVolunteersNeededPerShift" />
    </div>

    <h4>Shifts</h4>
    @foreach (var shift in newEvent.Shifts)
    {
        <div class="shift">
            <div class="form-group">
                <label for="shiftName">Shift Name</label>
                <InputText id="shiftName" class="form-control" @bind-Value="shift.Name" />
            </div>
            <div class="form-group">
                <label for="beginTime">Begin Time</label>
                <InputText id="beginTime" class="form-control" @bind-Value="shift.BeginTime" />
            </div>
            <div class="form-group">
                <label for="endTime">End Time</label>
                <InputText id="endTime" class="form-control" @bind-Value="shift.EndTime" />
            </div>
            <div class="form-group">
                <label for="numberOfVolunteersNeeded">Number of Volunteers Needed</label>
                <InputNumber id="numberOfVolunteersNeeded" class="form-control" @bind-Value="shift.NumberOfVolunteersNeeded" />
            </div>
        </div>
    }

    <button type="button" class="btn btn-secondary" @onclick="AddShift">Add Shift</button>
    <button type="submit" class="btn btn-primary">Add Event</button>
</EditForm>

@code {
    private Happening newEvent = new Happening();

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/addevent", newEvent);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            // Handle error
        }
    }

    private void AddShift()
    {
        newEvent.Shifts.Add(new Shift());
    }
}
